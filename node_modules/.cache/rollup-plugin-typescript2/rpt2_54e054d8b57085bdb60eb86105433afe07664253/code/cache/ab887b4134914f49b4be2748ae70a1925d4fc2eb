{"code":"import { createRouterEvent } from \"../utils/createRouterEvent\";\nclass Monitor {\n    constructor(options) {\n        this.options = options;\n        this.pageStartTime = this.getTime();\n        this.currentPage = window.location.href;\n        this.addEventListener();\n        if (this.options.routerTracker) {\n            this.installRouterTracker();\n        }\n    }\n    // 添加监听事件\n    addEventListener() {\n        window.history[\"pushState\"] = createRouterEvent(\"pushState\");\n        window.history[\"replaceState\"] = createRouterEvent(\"replaceState\");\n    }\n    // 监听路由变化统计pv\n    installRouterTracker() {\n        this.getStayTime();\n    }\n    // 统计页面停留时长\n    getStayTime() {\n        [\"hashchange\", \"pushState\", \"replaceState\", \"popstate\"].forEach((item) => {\n            window.addEventListener(item, (event) => {\n                let currentPage = window.location.href;\n                if (currentPage === this.currentPage)\n                    return;\n                this.currentPage = currentPage;\n                let stayTime = this.calcStayTime() / 1000;\n                if (stayTime > 0.2) {\n                    this.pageStartTime = this.getTime();\n                    // 上报数据\n                    console.log({ stayTime, currentPage, event });\n                }\n            });\n        });\n    }\n    getTime() {\n        return new Date().getTime();\n    }\n    calcStayTime() {\n        return this.getTime() - this.pageStartTime;\n    }\n    static lazyReport() { }\n}\n// @ts-ignore\nwindow.Monitor = Monitor;\nexport default Monitor;\n","references":["/Users/ztz/myPro/ztz-monitor/src/types/index.ts","/Users/ztz/myPro/ztz-monitor/src/utils/createRouterEvent.ts"]}
