{"code":"import { reportTracker } from \"./reportTracker\";\nconst _window = window;\nexport const jsError = () => {\n    const originOnError = window.onerror;\n    window.onerror = function (msg, url, row, col, error) {\n        if (originOnError) {\n            originOnError.call(_window, msg, url, row, col, error);\n        }\n        reportTracker({\n            msg,\n            url,\n            row,\n            col,\n            error,\n            userId: _window.Monitor._userId_ || \"\",\n            type: \"jsError\",\n        }, \"Error\");\n    };\n};\nexport const promiseError = () => {\n    window.addEventListener(\"unhandledrejection\", (error) => {\n        reportTracker({\n            error: error,\n            msg: error.reason,\n            userId: _window.Monitor._userId_ || \"\",\n            type: \"promiseError\",\n        }, \"Error\");\n    });\n};\nexport const resourceError = () => {\n    window.addEventListener(\"error\", (error) => {\n        const target = error.target;\n        const isElementTarget = target instanceof HTMLScriptElement ||\n            target instanceof HTMLLinkElement ||\n            target instanceof HTMLImageElement;\n        // 只处理除了jsError的错误\n        if (!isElementTarget) {\n            return;\n        }\n        reportTracker({\n            //@ts-ignore\n            target: target.src || target.href,\n            msg: target.tagName + \"资源加载错误\",\n            userId: _window.Monitor._userId_ || \"\",\n            type: \"resourceError\",\n        }, \"Error\");\n    }, true);\n};\n","references":["/Users/ztz/myPro/ztz-monitor/src/core/reportTracker.ts"]}
